<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gamepiece.user.pointShop.mapper.UserPointShopMapper">
	<resultMap type="gamepiece.user.pointShop.domain.Point" id="pointshopResultMap">
			<id column="ps_cd" 			property="itemCd"/>
			<result column="ps_cate_cd" property="itemCate" />
			<result column="cate_nm" 	property="cateName" />
			<result column="ps_nm" 		property="itemName" />
			<result column="img_url" 	property="itemImgurl" />
			<result column="ps_price" 	property="itemPrice" />
			<result column="admin_id" 	property="adminId" />
			<result column="reg_ymd" 	property="regYmd" />
			<result column="is_delete"  property="isDelete" />
	</resultMap>
	
	<resultMap type="gamepiece.user.pointShop.domain.PointCategories" id="pointshopCateResult">
		<id column="cate_cd" property="cateCode" />
		<result column="cate_nm" 	property="cateName" />
		<result column="admin_id" 	property="adminId" />
		<result column="reg_ymd" 	property="regYmd" />
	</resultMap>
	
	<resultMap type="gamepiece.user.pointShop.domain.PointLog" id="pointLog">
		<id column="point_no" 					property="pointNo" />
		<result column="id" 					property="id"/>
		<result column="point_receive_ymd" 		property="pry"/>
		<result column="point_receive_content"  property="prc"/>
		<result column="point_receive" 			property="pointReceive"/>
		<result column="point_division" 		property="pointDivision"/>
		<result column="remaining_point" 		property="totalPoint"/>
	</resultMap>
	
	<resultMap type="gamepiece.user.pointShop.domain.PointShopLog" id="pointShopLog">
		<id column="psl_no" property="pslNo" />
		<result column="id" property="id" />
		<result column="ps_cd" property="psCd" />
		<result column="psl_used_point" property="usedPoint" />
		<result column="psl_log_ymd" property="logYmd" />
	</resultMap>
	
	<!-- <select id="getItemInfoByName" parameterType="string" resultMap=""></select> -->
	<select id="findAll" resultMap="pointshopResultMap" parameterType="String">
		/* 포인트샵 아이템 목록 조회 */
		SELECT 
			ps_cd, 
			ps_cate_cd, 
			ps_nm, 
			img_url,
			ps_price,
			admin_id,
			reg_ymd
		FROM 
			point_shop;
	</select>
	
	<select id="pointInfo" resultMap="pointshopResultMap" parameterType="String">
		/* 포인트 코드를 받아서 해당 이이템 정보 조회*/
		SELECT
			ps.ps_cd,
			ps.ps_cate_cd,
			ps.ps_nm,
			ps.ps_price,
			ps.img_url,
			pc.cate_nm
		FROM
			point_shop ps INNER JOIN pointshop_categories pc
			ON ps.ps_cate_cd = pc.cate_cd
		WHERE
			ps_cd=#{itemCd};
	</select>
	
	<select id="findimoticon" resultMap="pointshopResultMap" parameterType="Pageable">
		SELECT
			ps.ps_cd,
			ps.ps_cate_cd,
			ps.ps_nm,
			ps.ps_price,
			ps.img_url,
			pc.cate_nm
		FROM
			point_shop ps INNER JOIN pointshop_categories pc
			ON ps.ps_cate_cd = pc.cate_cd
		WHERE
			pc.cate_nm='이모티콘'
			AND
			ps.is_delete='active'
		LIMIT #{rowPerPage} OFFSET #{offset};
	</select>
	<select id="findavatar" resultMap="pointshopResultMap" parameterType="Pageable">
		SELECT
			ps.ps_cd,
			ps.ps_cate_cd,
			ps.ps_nm,
			ps.ps_price,
			ps.img_url,
			pc.cate_nm
		FROM
			point_shop ps INNER JOIN pointshop_categories pc
			ON ps.ps_cate_cd = pc.cate_cd
		WHERE
			pc.cate_nm='프로필이미지'
			AND
			ps.is_delete='active'
		LIMIT #{rowPerPage} OFFSET #{offset};
	</select>
	<select id="findavatarframe" resultMap="pointshopResultMap" parameterType="Pageable">
		SELECT
			ps.ps_cd,
			ps.ps_cate_cd,
			ps.ps_nm,
			ps.ps_price,
			ps.img_url,
			pc.cate_nm
		FROM
			point_shop ps INNER JOIN pointshop_categories pc
			ON ps.ps_cate_cd = pc.cate_cd
		WHERE
			pc.cate_nm='아바타 액자'
			AND
			ps.is_delete='active'
		LIMIT #{rowPerPage} OFFSET #{offset};
	</select>
	<select id="findetc" resultMap="pointshopResultMap" parameterType="Pageable">
		SELECT
			ps.ps_cd,
			ps.ps_cate_cd,
			ps.ps_nm,
			ps.ps_price,
			ps.img_url,
			pc.cate_nm
		FROM
			point_shop ps INNER JOIN pointshop_categories pc
			ON ps.ps_cate_cd = pc.cate_cd
		WHERE
			pc.cate_nm='기타'
			AND
			ps.is_delete='active'
		LIMIT #{rowPerPage} OFFSET #{offset};
	</select>
	<select id="findbackground" resultMap="pointshopResultMap" parameterType="Pageable">
		SELECT
			ps.ps_cd,
			ps.ps_cate_cd,
			ps.ps_nm,
			ps.ps_price,
			ps.img_url,
			pc.cate_nm
		FROM
			point_shop ps INNER JOIN pointshop_categories pc
			ON ps.ps_cate_cd = pc.cate_cd
		WHERE
			pc.cate_nm='배경프로필'
			AND
			ps.is_delete='active'
		LIMIT #{rowPerPage} OFFSET #{offset};
	</select>
	
	<select id="getavatarCount" resultType="int">
		/* 아이템 갯수 총 행의 갯수*/
		SELECT
			COUNT(*)
		FROM
			point_shop ps INNER JOIN pointshop_categories pc
			ON ps.ps_cate_cd = pc.cate_cd
		WHERE
			pc.cate_nm='프로필이미지'
			AND
			ps.is_delete='active';
	</select>
	<select id="getbackCount" resultType="int">
		/* 아이템 갯수 총 행의 갯수*/
		SELECT
			COUNT(*)
		FROM
			point_shop ps INNER JOIN pointshop_categories pc
			ON ps.ps_cate_cd = pc.cate_cd
		WHERE
			pc.cate_nm='배경프로필'
			AND
			ps.is_delete='active';
	</select>
	<select id="getetcCount" resultType="int">
		/* 아이템 갯수 총 행의 갯수*/
		SELECT
			COUNT(*)
		FROM
			point_shop ps INNER JOIN pointshop_categories pc
			ON ps.ps_cate_cd = pc.cate_cd
		WHERE
			pc.cate_nm='기타'
			AND
			ps.is_delete='active';
	</select>
	<select id="getframeCount" resultType="int">
		/* 아이템 갯수 총 행의 갯수*/
		SELECT
			COUNT(*)
		FROM
			point_shop ps INNER JOIN pointshop_categories pc
			ON ps.ps_cate_cd = pc.cate_cd
		WHERE
			pc.cate_nm='아바타액자'
			AND
			ps.is_delete='active';
	</select>
	<select id="getimoticonCount" resultType="int">
		/* 아이템 갯수 총 행의 갯수*/
		SELECT
			COUNT(*)
		FROM
			point_shop ps INNER JOIN pointshop_categories pc
			ON ps.ps_cate_cd = pc.cate_cd
		WHERE
			pc.cate_nm='이모티콘'
			AND
			ps.is_delete='active';
	</select>
	
	<select id="findCate" resultMap="pointshopCateResult">
		/* 포인트샵 카테고리 조회 */
		SELECT 
			cate_cd,
			cate_nm
		FROM 
			pointshop_categories
		ORDER BY
			cate_nm DESC;
	</select>
	
	<!-- 포인트샵 구매내역 추가 -->
	<!-- <insert id="addpsl" parameterType="PointShopLog">
		INSERT INTO pointshop_logs
			(psl_no, id, ps_cd, psl_used_point, psl_log_ymd)
		VALUES 
			(#{pslNo}, #{id}, #{itemCd}, #{itemPrice}, NOW())
	</insert> -->
	
	<select id="getItemInfoByItemName" resultMap="pointshopResultMap" >
		/* 특정 아이템 조회*/
		SELECT
			*
		FROM
			point_shop ps
		WHERE
			ps.ps_cd = #{itemCd};
	</select>
	
	<update id="modifyItem" parameterType="gamepiece.user.pointShop.domain.Point">
		UPDATE point_shop
		<trim prefix="SET" suffixOverrides=",">
			<if test="itemCate != null and itemCate != ''">
				ps_cate_cd =#{itemCate},
			</if>
			<if test="itemName != null and itemName != ''">
				ps_nm=#{itemName},
			</if>
			<if test="itemImgurl != null and itemImgurl != ''">
				img_url=#{itemImgurl},
			</if>
			<if test="itemPrice != null and itemPrice > 0">
				ps_price=#{itemPrice},
			</if>
			<if test="adminId != null and adminId != ''">
				admin_id=#{adminId},
			</if>
			<if test="regYmd != null and regYmd > ''">
				reg_ymd=#{regYmd},
			</if>
		</trim>
		WHERE 
			ps_cd = #{itemCd};
	</update>
	
	<insert id="addPointShopLog" parameterType="gamepiece.user.pointShop.domain.PointShopLog">
        INSERT INTO pointshop_logs (
        	psl_no, 
			id, 
			ps_cd, 
			psl_used_point,
			psl_log_ymd
		) VALUES (
			<![CDATA[(SELECT 
				CONCAT('psl_',LPAD(IFNULL(MAX(SUBSTRING(pl.psl_cd,4)+1),0),
				IF(LENGTH(MAX(SUBSTRING(pl.psl_no,4)+1))<=2,2,LENGTH(MAX(SUBSTRING(pl.psl_no,4)+1))),'0')) ]]>
			FROM 
				pointshop_logs pl),
			#{id},
			#{itemCd},
			#{itemPrice},
			CURDATE()
		);
    </insert>
    
    <update id="removeItem" parameterType="gamepiece.user.pointShop.domain.Point">
    	UPDATE point_shop
		SET
			is_delete='delete'
		WHERE
			ps_cd=#{ps_cd};
    </update>
    
    <select id="getPointsHeld" resultMap="pointLog">
    	SELECT 
		    pl.id,
		    SUM(pl.point_receive)-(
		                                    SELECT 
		                                        SUM(point_receive) 
		                                    FROM 
		                                        point_log pl_sub 
		                                    WHERE 
		                                        pl.id = pl_sub.id 
		                                    AND 
		                                        pl_sub.point_division = '사용'
		                                 ) AS remaining_point
		FROM
		    point_log pl
		WHERE
		    pl.point_division = '적립'
		    AND
		    pl.id=#{id};
    </select>

</mapper>
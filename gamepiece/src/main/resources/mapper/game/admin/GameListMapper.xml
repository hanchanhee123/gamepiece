<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gamepiece.admin.game.mapper.GameListMapper">
	<resultMap type="gamepiece.admin.game.domain.Game" id="gameList">
		<id 	column="gm_cd" property="gameCode"></id>
		<result column="gm_nm" property="gameName"></result>
		<result column="p_cd" property="platformCode"></result>
		<result column="p_nm" property="platformName"></result>
		<result column="developer" property="developer"></result>
		<result column="gm_enrollment_ymd" property="gameEnrollmentYmd"></result>
		<result column="detail_id" property="detailId"></result>
		<result column="img_id" property="imgId"></result>
		<result column="video_id" property="videoId"></result>
		<result column="description" property="description"></result>
		<result column="price" property="price"></result>
		<result column="genre_cd" property="genreCode"></result>
		<result column="genre_name" property="genreName"></result>
		<result column="genre" property="genre"></result>
		<result column="review_count" property="reviewCount"></result>
		<result column="review_avg" property="reviewAvg"></result>
		<result column="summation" property="summation"></result>
		<result column="admin_id" property="adminId"></result>
		<result column="reg_ymd" property="regYmd"></result>
		<result column="isDelete" property="isDelete"></result> 
	</resultMap>
	<select id="getGameList" parameterType="Pageable" resultMap="gameList">
		/* 게임 목록 조회 */
		SELECT
			g.gm_cd,
			g.gm_nm,
			g.p_cd,
			p.p_nm,
			g.developer,
			g.gm_enrollment_ymd,
			gd.detail_id,
			gd.img_id,
			gd.video_id,
			gd.description,
			gd.price,
			gd.genre,
			gg.genre_name,
			gd.review_count,
			gd.review_avg,
			gd.summation,
			gd.admin_id,
			gd.reg_ymd,
			g.is_delete,
			gd.is_delete
		FROM
			games g INNER JOIN game_detail gd
			ON g.gm_cd = gd.gm_cd
			INNER JOIN platform p
			ON g.p_cd = p.p_cd 
			INNER JOIN game_genre gg
			ON gd.genre = gg.genre_cd
		ORDER BY CAST(SUBSTRING_INDEX(g.gm_cd,'gm_',-1) AS UNSIGNED)
		LIMIT #{rowPerPage} OFFSET #{offset};


	</select>
	
	<select id="getGameInfoByCode" parameterType="Pageable" resultMap="gameList">
		/* 특정 게임 정보 조회 */
		SELECT
			g.gm_cd,
			g.gm_nm,
			g.p_cd,
			p.p_nm,
			g.developer,
			g.gm_enrollment_ymd,
			gd.detail_id,
			gd.img_id,
			gd.video_id,
			gd.`description`,
			gd.price,
			gd.genre,
			gg.genre_name,
			gd.review_count,
			gd.review_avg,
			gd.summation,
			gd.admin_id,
			gd.reg_ymd
		FROM
			games g INNER JOIN game_detail gd
			ON g.gm_cd = gd.gm_cd
			INNER JOIN platform p
			ON g.p_cd = p.p_cd 
			INNER JOIN game_genre gg
			ON gd.genre = gg.genre_cd
		WHERE
			g.gm_cd = #{gameCode};
	</select>
	
	<select id="getPlatform" resultType="map">
		/* 플랫폼 조회 */
		SELECT
			p_cd as platformCode,
			p_nm as platformName
		FROM
			platform;
	</select>
	
	<update id="modifyGame" parameterType="Game">
		/* 특정 게임 정보 수정 */
		UPDATE 
			game_detail gd INNER JOIN games g
			ON gd.gm_cd = g.gm_cd
		SET
			g.gm_nm=#{gameName},
			gd.`description`=#{description},
			gd.price=#{price}
		WHERE 
			gd.gm_cd = #{gameCode};
	</update>
	
	
	
	<select id="getCntGameList" resultType="int">
		/* 게임 목록 행의 갯수 */
		SELECT
			COUNT(*)
		FROM
			games g INNER JOIN game_detail gd
			ON g.gm_cd = gd.gm_cd
			INNER JOIN platform p
			ON g.p_cd = p.p_cd;
	</select>
	
	<select id="getSearchList" parameterType="map" resultMap="gameList">
		/* 게임 검색 */
		SELECT
			g.gm_cd,
			g.gm_nm,
			gd.price
		FROM
			games g INNER JOIN game_detail gd
			ON g.gm_cd = gd.gm_cd
		WHERE
			g.gm_nm LIKE CONCAT('%', #{searchValue}, '%')
		ORDER BY CAST(SUBSTRING_INDEX(g.gm_cd,'gm_',-1) AS UNSIGNED);
	</select>
	<select id="getGenreList" parameterType="Game" resultMap="gameList">
		/* 장르 목록 조회 */
		SELECT
			genre_cd,
			genre_name
		FROM
			game_genre;
	</select>
	
	<select id="getGameWithGenre" parameterType="map" resultMap="gameList">
		/* 장르르 통한 게임 목록 검색 */
		SELECT
			g.gm_cd,
			g.gm_nm,
			g.p_cd,
			p.p_nm,
			g.developer,
			g.gm_enrollment_ymd,
			gd.detail_id,
			gd.img_id,
			gd.video_id,
			gd.`description`,
			gd.price,
			gg.genre_name,
			gd.genre,
			gd.review_count,
			gd.review_avg,
			gd.summation,
			gd.admin_id,
			gd.reg_ymd,
			g.is_delete,
			gd.is_delete
		FROM
			games g INNER JOIN game_detail gd
			ON g.gm_cd = gd.gm_cd
			INNER JOIN platform p
			ON g.p_cd = p.p_cd
			INNER JOIN game_genre gg
			ON gd.genre = gg.genre_cd
		WHERE
			gd.genre = #{searchGenre}
		ORDER BY CAST(SUBSTRING_INDEX(g.gm_cd,'gm_',-1) AS UNSIGNED);	
	
	</select>
	<select id="getGameWithPlatform" parameterType="map" resultMap="gameList">
		/* 플랫폼을 통한 게임 조회 */
		SELECT
			g.gm_cd,
			g.gm_nm,
			g.p_cd,
			p.p_nm,
			g.developer,
			g.gm_enrollment_ymd,
			gd.detail_id,
			gd.img_id,
			gd.video_id,
			gd.`description`,
			gd.price,
			gd.genre,
			gd.review_count,
			gd.review_avg,
			gd.summation,
			gd.admin_id,
			gd.reg_ymd,
			g.is_delete,
			gd.is_delete
		FROM
			games g INNER JOIN game_detail gd
			ON g.gm_cd = gd.gm_cd
			INNER JOIN platform p
			ON g.p_cd = p.p_cd
		WHERE
			p.p_cd = #{searchPlatform}
		ORDER BY CAST(SUBSTRING_INDEX(g.gm_cd,'gm_',-1) AS UNSIGNED);
	
	</select>
</mapper>